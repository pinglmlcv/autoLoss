[env]
exp_dir = ~/haowen/GitHub/autoLoss
data_dir = ~/haowen/GitHub/autoLoss/Data/
model_dir = /datasets/BigLearning/haowen/autoLoss/saved_models
save_images_dir = /datasets/BigLearning/haowen/autoLoss/saved_images

[data]
train_data_file = gan_grid/train.npy
valid_data_file = gan_grid/valid.npy
test_data_file = gan_grid/test.npy
num_sample_train = 10000
num_sample_valid = 2000
num_sample_test = 2000
var_noise = 0.02

[stud]
student_model_name = gan_grid
batch_size = 128
lr_stud = 0.002
lr_decay_stud = 1
beta1 = 0.5
beta2 = 0.999
valid_frequency_stud = 1000
print_frequency_stud = 4000
max_endurance_stud = 50
max_training_step = 200000
# options: prescribed_steps, exceeding_endurance
stop_strategy_stud = exceeding_endurance

[gan]
gan_mode = gan_grid
# Dimension of noise vector z
dim_z = 128
dim_x = 2
n_hidden_disc = 128
n_hidden_gen = 128
disc_iters = 1
gen_iters = 1

[evaluate]

[rl]
controller_model_name = linear_logits_clipping
logit_clipping_c = 2
dim_state_rl = 6
dim_hidden_rl = 16
dim_action_rl = 2
lr_rl = 2
lr_decay_rl = 1
total_episodes = 1000
update_frequency = 1
save_frequency = 100
# according to ENAS code, this is very important
inps_baseline_decay = 0.8
reward_c = 1000
reward_step_rl = 0.1
# Set an max step reward, in case the improve baseline is too small and cause
# huge reward.
reward_max_value = 20
explore_rate_decay_rl = 100
explore_rate_rl = 0
max_endurance_rl = 50
state_decay = 0.9
metric_decay = 0.8
